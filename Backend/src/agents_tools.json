{
  "agents_simple": {
    "DeskBookingAgent": {
      "functions": [
        {
          "name": "IsFree",
          "description": "Returns true if the desk with the given desk id is free and available to book.",
          "parameters": {
            "desk": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "BookDesk",
          "description": "Books the desk with the given desk id. Returns true if the desk was successfully booked. Returns false otherwise. Possible errors could include an invalid desk id or the desk not being available to book.",
          "parameters": {
            "desk": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "GetDesks",
          "description": "Returns a list of all desk ids.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "integer"
            }
          }
        }
      ],
      "summary": "This agent is designed to manage desk bookings by checking availability, retrieving desk IDs, and facilitating bookings. It allows users to view all available desk IDs, check if a specific desk is free, and book a desk if it is available. It is specifically suited for systems that require efficient desk reservation management, ensuring accurate availability checks and successful bookings."
    },
    "DiagnosticsAgent": {
      "functions": [
        {
          "name": "RunFullSystemCheck",
          "description": "Checks and returns the health of every available device.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "CheckDeviceHealth",
          "description": "Checks and returns the health of the device by its device id.",
          "parameters": {
            "device_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetSystemUptime",
          "description": "Returns the total time the system has been running.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "ListActiveDevices",
          "description": "Returns a list of all active devices and their ids.",
          "parameters": {},
          "result": {
            "type": "object",
            "required": true
          }
        },
        {
          "name": "GetDeviceId",
          "description": "Returns the id for a given device name.",
          "parameters": {
            "device_name": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "GenerateReport",
          "description": "Generates a full and detailed report of the whole system.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "CheckNetworkStatus",
          "description": "Checks and returns the status of the network.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "RestartDevice",
          "description": "Restart a device with its device id.",
          "parameters": {
            "device_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "ScheduleMaintenance",
          "description": "Schedule a maintenance date for the given device by its device id. Please give the date as a string in the format of (YYYY-MM-DD).",
          "parameters": {
            "device_id": {
              "type": "integer",
              "required": true
            },
            "date": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetLastMaintenanceDate",
          "description": "Returns the last maintenance date of the given device by its device id.",
          "parameters": {
            "device_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to monitor, diagnose, and manage the health and performance of a system and its devices. It provides comprehensive system diagnostics by running full system checks, checking individual device health, monitoring network status, and tracking system uptime. Additionally, it supports device-specific actions such as retrieving device IDs, listing active devices, restarting devices, scheduling maintenance, and accessing maintenance history, while also generating detailed system reports for thorough analysis."
    },
    "KitchenAgent": {
      "functions": [
        {
          "name": "CheckCoffeeMachineStatus",
          "description": "Returns the current status for the coffee machine.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetSnackInventory",
          "description": "Returns a list of the available snacks.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "OrderSnack",
          "description": "Orders the given amount of a specific snack from the list of available snacks and returns true. The default amount is 1. If no snack was found by that name returns false.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            },
            "amount": {
              "type": "integer",
              "required": false
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "ScheduleCleaning",
          "description": "Schedules a date for cleaning. Specify the date in the format (YYYY-MM-DD).",
          "parameters": {
            "date": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "ReserveFridgeSpace",
          "description": "Reserves a space in the fridge for the given amount of time. The duration is given in days.",
          "parameters": {
            "space_id": {
              "type": "integer",
              "required": true
            },
            "duration": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "GetFridgeContents",
          "description": "Returns a list of the contents in the fridge. If a space id is specified, only returns the contents of that space, otherwise returns all contents in the fridge.",
          "parameters": {
            "space_id": {
              "type": "integer",
              "required": false
            }
          },
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "GetFridgeSpaceIds",
          "description": "Returns a list of the fridge space ids.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "integer"
            }
          }
        },
        {
          "name": "ReportKitchenIssue",
          "description": "Report an issue within the kitchen.",
          "parameters": {
            "issue_description": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "null",
            "required": true
          }
        },
        {
          "name": "CheckWaterFilterStatus",
          "description": "Returns the current status of the water filter.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetGroceryList",
          "description": "Returns the current grocery list.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "AddToGroceryList",
          "description": "Adds an item to the grocery list. Returns false if the item is already on the grocery list.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "RemoveFromGroceryList",
          "description": "Removes an item from the grocery list. Returns false if item was not found on the grocery list.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to manage and maintain kitchen operations efficiently. It handles tasks such as monitoring the status of appliances (coffee machine, water filter), managing snack and fridge inventories, scheduling cleaning, reserving fridge space, and reporting kitchen issues. Additionally, it facilitates grocery list management by adding, removing, or retrieving items, ensuring smooth kitchen functionality and resource availability."
    },
    "LightControlAgent": {
      "functions": [
        {
          "name": "TurnOnLights",
          "description": "Turns the light on in the room by its room id. Returns false if the room does not exist.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "TurnOffLights",
          "description": "Turns the light off in the room by its room id. Returns false if the room does not exist.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "SetLightIntensity",
          "description": "Sets the light intensity of a room by its room id. Specify the intensity with a number between 0.0 and 1.0. Returns false if the room does not exist or the intensity is invalid.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            },
            "intensity": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "ActivateEmergencyLights",
          "description": "Activate the emergency lights in all room. Does not return anything.",
          "parameters": {},
          "result": {
            "type": "null",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to control lighting systems in specific rooms by their room IDs. It can turn lights on or off, adjust light intensity within a range of 0.0 to 1.0, and activate emergency lights across all rooms simultaneously. It is ideal for managing room-specific lighting or triggering emergency lighting scenarios, with functionality dependent on valid room IDs and parameters."
    },
    "RoomAgent": {
      "functions": [
        {
          "name": "GetRooms",
          "description": "Returns a JSON object containing the room ids and the room names.",
          "parameters": {},
          "result": {
            "type": "object",
            "required": true
          }
        },
        {
          "name": "GetRoomIds",
          "description": "Returns a list of all room ids.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "integer"
            }
          }
        },
        {
          "name": "GetRoomNames",
          "description": "Returns a list of all the room names.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "GetRoomName",
          "description": "Returns the name of a room belonging to the given room id.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetRoomId",
          "description": "Returns the id of a room belonging to the given room name.",
          "parameters": {
            "room_name": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "CheckAvailability",
          "description": "Checks the availability of a room by its room id. Returns true if the room is available, false otherwise. Also returns false if the room id is invalid.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "BookRoom",
          "description": "Book a room by its room id. Returns true if the room was successfully booked. Returns false if the room is already booked or the room id is invalid.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to manage and interact with room-related data, enabling users to retrieve room information, check availability, and book rooms. It provides functions to obtain room ids, names, or both, convert between room ids and names, verify if a room is available, and book a room if it is not already reserved. It is specifically suited for systems requiring room identification, availability checks, and booking operations based on room ids or names."
    },
    "SensorAgent": {
      "functions": [
        {
          "name": "GetTemperature",
          "description": "Returns the measured temperature in celsius. If no room was found with the given room id returns -1.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "GetCo2Level",
          "description": "Returns the measured CO2 level in parts per million. If no room was found with the given room id returns -1.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "GetHumidity",
          "description": "Returns the measured humidity in percentage. If no room was found with the given room id returns -1.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "GetNoise",
          "description": "Returns the measured noise in decibel. If no room was found with the given room id returns -1.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "CheckSensorBattery",
          "description": "Returns the current battery level for this room sensor in percentage. If no room was found with the given room id returns -1.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "GetCompleteInfo",
          "description": "Returns all the available sensor information within the room.",
          "parameters": {
            "room_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to retrieve environmental and operational data from room-specific sensors. It provides precise measurements of temperature, CO2 levels, humidity, noise, and sensor battery status, either individually or as a complete set of all available data for a given room. It is ideal for monitoring and analyzing room conditions or diagnosing sensor performance issues by using the room ID to access targeted information."
    },
    "MusicPlayerAgent": {
      "functions": [
        {
          "name": "PlayTrack",
          "description": "Starts to play a song. Specify the song with its track id. If no track id was specified, resumes to play the last song. Returns true if the song starts playing, false otherwise.",
          "parameters": {
            "track_id": {
              "type": "integer",
              "required": false
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "PauseTrack",
          "description": "Stops the currently playing song. Does not return anything",
          "parameters": {},
          "result": {
            "type": "null",
            "required": true
          }
        },
        {
          "name": "SkipToNextTrack",
          "description": "Skips to the next track in the list. Returns the track_id of the next track.",
          "parameters": {},
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "SkipToPreviousTrack",
          "description": "Skips to the previous track in the list. Returns the track_id of the previous track.",
          "parameters": {},
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "GetCurrentVolume",
          "description": "Returns the current volume of the music player. The volume has a range of 0 to 10.",
          "parameters": {},
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "IncreaseVolume",
          "description": "Increases the volume by 1 point to a maximum of 10. Returns the updated volume.",
          "parameters": {},
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "DecreaseVolume",
          "description": "Decrease the volume by 1 point to a minimum of 0. Returns the updated volume.",
          "parameters": {},
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "AdjustVolume",
          "description": "Set the volume to the given value. The volume has a range of 0 to 10. Returns the updated volume. Returns -1 if the given value was out of range.",
          "parameters": {
            "volume": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "Mute",
          "description": "Mutes the song and sets the volume to 0. Returns the updated volume.",
          "parameters": {},
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "GetTrackIds",
          "description": "Returns a list of all valid track ids.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "integer"
            }
          }
        },
        {
          "name": "GetTracks",
          "description": "Returns a list of all the track names.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "GetIdByTrack",
          "description": "Returns the id to the given track name. If no id with the given track was found, returns -1.",
          "parameters": {
            "track": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "GetTrackById",
          "description": "Returns the track name to the given id.",
          "parameters": {
            "track_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to control music playback and manage tracks and volume settings. It allows users to play, pause, skip, or retrieve information about tracks using track IDs or names, while also providing full control over volume adjustments, including muting. It is ideal for tasks involving precise music playback control, track navigation, and volume management within a predefined range."
    },
    "PlaylistAgent": {
      "functions": [
        {
          "name": "CreatePlaylist",
          "description": "Create a new playlist. Provide a name for the playlist. Optionally provide a list of songs that should already be added to the playlist. Returns the generated id for the playlist.",
          "parameters": {
            "playlist_name": {
              "type": "string",
              "required": true
            },
            "songs": {
              "type": "array",
              "required": false,
              "items": {
                "type": "string"
              }
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "CreateMultiplePlaylists",
          "description": "Create multiple playlists at once. Takes in a list of playlist names and another list with the same length with lists containing the songs to each of the playlist.Returns a list of generated ids for the playlists in the input order. Returns a list with -1 if an error occurred.",
          "parameters": {
            "playlist_names": {
              "type": "array",
              "required": true,
              "items": {
                "type": "string"
              }
            },
            "playlist_songs": {
              "type": "array",
              "required": true,
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "integer"
            }
          }
        },
        {
          "name": "DeletePlaylist",
          "description": "Deletes a playlist with its playlist id. Returns true if the playlist was deleted.",
          "parameters": {
            "playlist_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "AddSongToPlaylist",
          "description": "Adds a single song to a playlist. Specify the playlist with its playlist id. Returns the updated list of songs for the playlist. If no playlist was found by that id, returns an empty list.",
          "parameters": {
            "playlist_id": {
              "type": "integer",
              "required": true
            },
            "song_name": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "RemoveSongFromPlaylist",
          "description": "Removes a song from a playlist. Specify the playlist with its playlist id. Provide the full name of the song. Returns true if the song was removed from the playlist. If the playlist nor the song exist, returns false.",
          "parameters": {
            "playlist_id": {
              "type": "integer",
              "required": true
            },
            "song_name": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "RenamePlaylist",
          "description": "Renames a playlist. Specify the playlist with its playlist id and provide a new name. Returns true if the playlist was renamed successfully. Returns false if the playlist id is invalid.",
          "parameters": {
            "playlist_id": {
              "type": "integer",
              "required": true
            },
            "new_name": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "GetPlaylistNames",
          "description": "Returns a list of all the playlist names.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "GetPlaylists",
          "description": "Returns a list of all the songs of all playlists.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        {
          "name": "GetPlaylistSongs",
          "description": "Returns a list of all the songs of the playlist. Specify the playlist with its playlist id.",
          "parameters": {
            "playlist_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "GetPlaylistId",
          "description": "Returns the playlist id of the playlist. Specify the playlist with its full name.",
          "parameters": {
            "playlist_name": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to manage playlists by creating, modifying, retrieving, and deleting them. It allows users to create single or multiple playlists with optional initial songs, rename or delete playlists, and add or remove songs from specific playlists using their unique IDs. Additionally, it provides functionality to retrieve playlist details, such as names, IDs, or song lists, enabling efficient organization and access to music collections."
    },
    "SocialAgent": {
      "functions": [
        {
          "name": "FollowArtist",
          "description": "Follow an arist.",
          "parameters": {
            "artist": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "null",
            "required": true
          }
        },
        {
          "name": "UnfollowArtist",
          "description": "Unfollow an arist",
          "parameters": {
            "artist": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "null",
            "required": true
          }
        },
        {
          "name": "LikeTrack",
          "description": "Likes a track.",
          "parameters": {
            "track": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "null",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to manage user interactions with music content by enabling actions such as following or unfollowing artists and liking tracks. It allows users to follow or unfollow specific artists by providing their names and to like individual tracks by specifying the track name. The agent is ideal for personalizing music preferences and maintaining a curated list of favorite artists and tracks."
    },
    "CustomerAgent": {
      "functions": [
        {
          "name": "MakeOrder",
          "description": "Creates an order for the given amount of the specified item. Default amount is 1. Returns the order id.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            },
            "amount": {
              "type": "integer",
              "required": false
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "MakeOrders",
          "description": "Creates multiple orders. Takes in a list of items and a list of the same length with their amounts. The order of both input lists has to be the same. The order determines the amount for the item. If no amount list was given, sets the amount for each item to 1. Returns the order ids as a list in the same order as the input lists. If an error occurred, returns -1 for the order with the error.",
          "parameters": {
            "items": {
              "type": "array",
              "required": true,
              "items": {
                "type": "string"
              }
            },
            "amounts": {
              "type": "array",
              "required": false,
              "items": {
                "type": "integer"
              }
            }
          },
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "integer"
            }
          }
        },
        {
          "name": "GetOrder",
          "description": "Gets an existing order by the given order id.",
          "parameters": {
            "order_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "Order",
            "required": true
          }
        },
        {
          "name": "GetAllOrders",
          "description": "Get all existing orders.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "Order"
            }
          }
        },
        {
          "name": "CancelOrder",
          "description": "Cancel an existing order. Returns true if an order was cancelled.",
          "parameters": {
            "order_id": {
              "type": "integer",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "AddOrder",
          "description": "Adds an order to the list of orders. This should only be used if you have already have an order id.",
          "parameters": {
            "order": {
              "type": "Order",
              "required": true
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "AddOrders",
          "description": "Adds multiple existing orders to the list of orders. This should only be used if you already have an order id.",
          "parameters": {
            "orders": {
              "type": "array",
              "required": true,
              "items": {
                "type": "Order"
              }
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to manage customer orders by creating, retrieving, updating, and canceling them. It allows for single or bulk order creation, retrieval of specific or all orders, and cancellation of orders by their ID. Additionally, it supports adding pre-existing orders to its system, making it ideal for handling order management tasks in e-commerce or inventory systems."
    },
    "WarehouseAgent": {
      "functions": [
        {
          "name": "GetItemLocation",
          "description": "Gets the location of a given item in the warehouse. Returns an empty string if the item was not found.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetInventory",
          "description": "Gets the inventory of the given zone from the warehouse.",
          "parameters": {
            "zone": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "GetZones",
          "description": "Returns the list of available zones in the warehouse.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "AddItemToZone",
          "description": "Adds a single item to the given zone to the warehouse.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            },
            "zone": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "RemoveItemFromZone",
          "description": "Removes a single item from the given zone of the warehouse.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            },
            "zone": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to manage and track warehouse inventory by providing tools to locate, organize, and update item placements. It can retrieve the location of specific items, list available zones, and access inventory details for a given zone, while also allowing the addition or removal of items in specific zones. It is ideal for tasks involving inventory management, item tracking, and warehouse organization."
    },
    "ManagerAgent": {
      "functions": [
        {
          "name": "GetWarehouseName",
          "description": "Get the name of the warehouse.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetWarehouseAddress",
          "description": "Get the address of the warehouse.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetWarehouseOwner",
          "description": "Get the name of the owner of the warehouse.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetWarehouseEmail",
          "description": "Get the contact email address of the warehouse.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "GetWarehouseAreaSize",
          "description": "Get the total area size of the warehouse in square meters.",
          "parameters": {},
          "result": {
            "type": "integer",
            "required": true
          }
        },
        {
          "name": "GetWarehouseZoneSizes",
          "description": "Get the area sizes of each zone within the warehouse in square meters.",
          "parameters": {},
          "result": {
            "type": "object",
            "required": true
          }
        },
        {
          "name": "GetWarehouseZoneSize",
          "description": "Get the area size for the given zone within the warehouse in square meters. If the given zone is not found within the warehouse, a -1 is returned.",
          "parameters": {
            "zone": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "integer",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to retrieve detailed information about a warehouse, including its name, address, owner, contact email, total area size, and the sizes of specific zones or all zones within the warehouse. It provides precise data on warehouse dimensions and organizational details, enabling efficient management or analysis of warehouse properties. It is best used for tasks requiring accurate and specific warehouse-related information, such as inventory planning, logistics coordination, or property management."
    },
    "LogisticsRobot1": {
      "functions": [
        {
          "name": "GetZone",
          "description": "Gets the current zone of the warehouse robot.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "MoveToLocation",
          "description": "Moves the warehouse robot to the given zone.",
          "parameters": {
            "zone": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "GetInventory",
          "description": "Get the inventory of the warehouse robot.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "PickupItem",
          "description": "Picks up an item from the zone the warehouse robot is currently in.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "DropItem",
          "description": "Drops an item into the zone the warehouse robot is currently in.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to manage and execute item transportation tasks within a warehouse by navigating zones and handling inventory. It can determine its current location, move to specified zones, retrieve its inventory, and perform item pickup or drop-off actions in its current zone. It is ideal for automating warehouse operations such as relocating items, restocking, or fulfilling orders by efficiently moving and managing goods between zones."
    },
    "LogisticsRobot2": {
      "functions": [
        {
          "name": "GetZone",
          "description": "Gets the current zone of the warehouse robot.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "MoveToLocation",
          "description": "Moves the warehouse robot to the given zone.",
          "parameters": {
            "zone": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "GetInventory",
          "description": "Get the inventory of the warehouse robot.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "PickupItem",
          "description": "Picks up an item from the zone the warehouse robot is currently in.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "DropItem",
          "description": "Drops an item into the zone the warehouse robot is currently in.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to manage and execute item transportation tasks within a warehouse by navigating zones and handling inventory. It can determine its current location, move to specified zones, retrieve its inventory, and perform item pickup or drop-off actions in its current zone. It is ideal for automating warehouse operations such as relocating items, restocking, or fulfilling orders by efficiently moving and managing inventory across designated zones."
    },
    "LogisticsRobot3": {
      "functions": [
        {
          "name": "GetZone",
          "description": "Gets the current zone of the warehouse robot.",
          "parameters": {},
          "result": {
            "type": "string",
            "required": true
          }
        },
        {
          "name": "MoveToLocation",
          "description": "Moves the warehouse robot to the given zone.",
          "parameters": {
            "zone": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "GetInventory",
          "description": "Get the inventory of the warehouse robot.",
          "parameters": {},
          "result": {
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "PickupItem",
          "description": "Picks up an item from the zone the warehouse robot is currently in.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        },
        {
          "name": "DropItem",
          "description": "Drops an item into the zone the warehouse robot is currently in.",
          "parameters": {
            "item": {
              "type": "string",
              "required": true
            }
          },
          "result": {
            "type": "boolean",
            "required": true
          }
        }
      ],
      "summary": "This agent is designed to manage and transport items within a warehouse by navigating zones and handling inventory. It can determine its current location, move to specified zones, retrieve its inventory, and pick up or drop off specific items in its current zone. It is ideal for automating tasks related to item retrieval, placement, and movement across different warehouse zones."
    },
    "calculator_agent": {
      "functions": [
        {
          "name": "Add",
          "description": "Adds number a and b",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            },
            "b": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Subtract",
          "description": "Subtracts number a and b",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            },
            "b": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Multiply",
          "description": "Multiplies number a and b",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            },
            "b": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Divide",
          "description": "Divides number a by b",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            },
            "b": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Modulus",
          "description": "Modulus of number a by b",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            },
            "b": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Power",
          "description": "Power of base to exponent",
          "parameters": {
            "base": {
              "type": "number",
              "required": true
            },
            "exp": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "SquareRoot",
          "description": "Square root of number a",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "LogN",
          "description": "Natural logarithm of number a",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Exp",
          "description": "Exponent of number a to the base of e",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Sin",
          "description": "Sine of number a",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Cos",
          "description": "Cosine of number a",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Tan",
          "description": "Tan of number a",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Asin",
          "description": "Arc sine of number a",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Acos",
          "description": "Arc cosine of number a",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        },
        {
          "name": "Atan",
          "description": "Arc tangent of number a",
          "parameters": {
            "a": {
              "type": "number",
              "required": true
            }
          },
          "result": {
            "type": "number",
            "required": true
          }
        }
      ],
      "summary": "This agent performs a wide range of mathematical operations, including basic arithmetic (addition, subtraction, multiplication, division, modulus), advanced calculations (exponentiation, square root, natural logarithm, exponential functions), and trigonometric functions (sine, cosine, tangent, and their inverses). Its functions are designed to handle precise numerical inputs and return accurate results for both simple and complex mathematical tasks. It is ideal for solving mathematical problems, performing scientific calculations, and handling trigonometric or logarithmic computations."
    }
  },
  "agents_detailed": [
    {
      "type": "function",
      "function": {
        "name": "DeskBookingAgent--IsFree",
        "description": "Returns true if the desk with the given desk id is free and available to book.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "desk"
              ],
              "type": "object",
              "properties": {
                "desk": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DeskBookingAgent--BookDesk",
        "description": "Books the desk with the given desk id. Returns true if the desk was successfully booked. Returns false otherwise. Possible errors could include an invalid desk id or the desk not being available to book.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "desk"
              ],
              "type": "object",
              "properties": {
                "desk": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DeskBookingAgent--GetDesks",
        "description": "Returns a list of all desk ids.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--RunFullSystemCheck",
        "description": "Checks and returns the health of every available device.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--CheckDeviceHealth",
        "description": "Checks and returns the health of the device by its device id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "device_id"
              ],
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--GetSystemUptime",
        "description": "Returns the total time the system has been running.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--ListActiveDevices",
        "description": "Returns a list of all active devices and their ids.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--GetDeviceId",
        "description": "Returns the id for a given device name.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "device_name"
              ],
              "type": "object",
              "properties": {
                "device_name": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--GenerateReport",
        "description": "Generates a full and detailed report of the whole system.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--CheckNetworkStatus",
        "description": "Checks and returns the status of the network.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--RestartDevice",
        "description": "Restart a device with its device id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "device_id"
              ],
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--ScheduleMaintenance",
        "description": "Schedule a maintenance date for the given device by its device id. Please give the date as a string in the format of (YYYY-MM-DD).",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "date",
                "device_id"
              ],
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "DiagnosticsAgent--GetLastMaintenanceDate",
        "description": "Returns the last maintenance date of the given device by its device id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "device_id"
              ],
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--CheckCoffeeMachineStatus",
        "description": "Returns the current status for the coffee machine.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--GetSnackInventory",
        "description": "Returns a list of the available snacks.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--OrderSnack",
        "description": "Orders the given amount of a specific snack from the list of available snacks and returns true. The default amount is 1. If no snack was found by that name returns false.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                },
                "amount": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--ScheduleCleaning",
        "description": "Schedules a date for cleaning. Specify the date in the format (YYYY-MM-DD).",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "date"
              ],
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--ReserveFridgeSpace",
        "description": "Reserves a space in the fridge for the given amount of time. The duration is given in days.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "duration",
                "space_id"
              ],
              "type": "object",
              "properties": {
                "space_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "duration": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--GetFridgeContents",
        "description": "Returns a list of the contents in the fridge. If a space id is specified, only returns the contents of that space, otherwise returns all contents in the fridge.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object",
              "properties": {
                "space_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--GetFridgeSpaceIds",
        "description": "Returns a list of the fridge space ids.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--ReportKitchenIssue",
        "description": "Report an issue within the kitchen.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "issue_description"
              ],
              "type": "object",
              "properties": {
                "issue_description": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--CheckWaterFilterStatus",
        "description": "Returns the current status of the water filter.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--GetGroceryList",
        "description": "Returns the current grocery list.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--AddToGroceryList",
        "description": "Adds an item to the grocery list. Returns false if the item is already on the grocery list.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "KitchenAgent--RemoveFromGroceryList",
        "description": "Removes an item from the grocery list. Returns false if item was not found on the grocery list.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LightControlAgent--TurnOnLights",
        "description": "Turns the light on in the room by its room id. Returns false if the room does not exist.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LightControlAgent--TurnOffLights",
        "description": "Turns the light off in the room by its room id. Returns false if the room does not exist.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LightControlAgent--SetLightIntensity",
        "description": "Sets the light intensity of a room by its room id. Specify the intensity with a number between 0.0 and 1.0. Returns false if the room does not exist or the intensity is invalid.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "intensity",
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "intensity": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LightControlAgent--ActivateEmergencyLights",
        "description": "Activate the emergency lights in all room. Does not return anything.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "RoomAgent--GetRooms",
        "description": "Returns a JSON object containing the room ids and the room names.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "RoomAgent--GetRoomIds",
        "description": "Returns a list of all room ids.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "RoomAgent--GetRoomNames",
        "description": "Returns a list of all the room names.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "RoomAgent--GetRoomName",
        "description": "Returns the name of a room belonging to the given room id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "RoomAgent--GetRoomId",
        "description": "Returns the id of a room belonging to the given room name.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_name"
              ],
              "type": "object",
              "properties": {
                "room_name": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "RoomAgent--CheckAvailability",
        "description": "Checks the availability of a room by its room id. Returns true if the room is available, false otherwise. Also returns false if the room id is invalid.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "RoomAgent--BookRoom",
        "description": "Book a room by its room id. Returns true if the room was successfully booked. Returns false if the room is already booked or the room id is invalid.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "SensorAgent--GetTemperature",
        "description": "Returns the measured temperature in celsius. If no room was found with the given room id returns -1.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "SensorAgent--GetCo2Level",
        "description": "Returns the measured CO2 level in parts per million. If no room was found with the given room id returns -1.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "SensorAgent--GetHumidity",
        "description": "Returns the measured humidity in percentage. If no room was found with the given room id returns -1.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "SensorAgent--GetNoise",
        "description": "Returns the measured noise in decibel. If no room was found with the given room id returns -1.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "SensorAgent--CheckSensorBattery",
        "description": "Returns the current battery level for this room sensor in percentage. If no room was found with the given room id returns -1.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "SensorAgent--GetCompleteInfo",
        "description": "Returns all the available sensor information within the room.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "room_id"
              ],
              "type": "object",
              "properties": {
                "room_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--PlayTrack",
        "description": "Starts to play a song. Specify the song with its track id. If no track id was specified, resumes to play the last song. Returns true if the song starts playing, false otherwise.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object",
              "properties": {
                "track_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--PauseTrack",
        "description": "Stops the currently playing song. Does not return anything",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--SkipToNextTrack",
        "description": "Skips to the next track in the list. Returns the track_id of the next track.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--SkipToPreviousTrack",
        "description": "Skips to the previous track in the list. Returns the track_id of the previous track.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--GetCurrentVolume",
        "description": "Returns the current volume of the music player. The volume has a range of 0 to 10.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--IncreaseVolume",
        "description": "Increases the volume by 1 point to a maximum of 10. Returns the updated volume.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--DecreaseVolume",
        "description": "Decrease the volume by 1 point to a minimum of 0. Returns the updated volume.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--AdjustVolume",
        "description": "Set the volume to the given value. The volume has a range of 0 to 10. Returns the updated volume. Returns -1 if the given value was out of range.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "volume"
              ],
              "type": "object",
              "properties": {
                "volume": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--Mute",
        "description": "Mutes the song and sets the volume to 0. Returns the updated volume.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--GetTrackIds",
        "description": "Returns a list of all valid track ids.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--GetTracks",
        "description": "Returns a list of all the track names.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--GetIdByTrack",
        "description": "Returns the id to the given track name. If no id with the given track was found, returns -1.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "track"
              ],
              "type": "object",
              "properties": {
                "track": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "MusicPlayerAgent--GetTrackById",
        "description": "Returns the track name to the given id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "track_id"
              ],
              "type": "object",
              "properties": {
                "track_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--CreatePlaylist",
        "description": "Create a new playlist. Provide a name for the playlist. Optionally provide a list of songs that should already be added to the playlist. Returns the generated id for the playlist.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "playlist_name"
              ],
              "type": "object",
              "properties": {
                "playlist_name": {
                  "type": "string"
                },
                "songs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--CreateMultiplePlaylists",
        "description": "Create multiple playlists at once. Takes in a list of playlist names and another list with the same length with lists containing the songs to each of the playlist.Returns a list of generated ids for the playlists in the input order. Returns a list with -1 if an error occurred.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "playlist_names",
                "playlist_songs"
              ],
              "type": "object",
              "properties": {
                "playlist_names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "playlist_songs": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--DeletePlaylist",
        "description": "Deletes a playlist with its playlist id. Returns true if the playlist was deleted.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "playlist_id"
              ],
              "type": "object",
              "properties": {
                "playlist_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--AddSongToPlaylist",
        "description": "Adds a single song to a playlist. Specify the playlist with its playlist id. Returns the updated list of songs for the playlist. If no playlist was found by that id, returns an empty list.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "playlist_id",
                "song_name"
              ],
              "type": "object",
              "properties": {
                "playlist_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "song_name": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--RemoveSongFromPlaylist",
        "description": "Removes a song from a playlist. Specify the playlist with its playlist id. Provide the full name of the song. Returns true if the song was removed from the playlist. If the playlist nor the song exist, returns false.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "playlist_id",
                "song_name"
              ],
              "type": "object",
              "properties": {
                "playlist_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "song_name": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--RenamePlaylist",
        "description": "Renames a playlist. Specify the playlist with its playlist id and provide a new name. Returns true if the playlist was renamed successfully. Returns false if the playlist id is invalid.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "new_name",
                "playlist_id"
              ],
              "type": "object",
              "properties": {
                "playlist_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "new_name": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--GetPlaylistNames",
        "description": "Returns a list of all the playlist names.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--GetPlaylists",
        "description": "Returns a list of all the songs of all playlists.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--GetPlaylistSongs",
        "description": "Returns a list of all the songs of the playlist. Specify the playlist with its playlist id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "playlist_id"
              ],
              "type": "object",
              "properties": {
                "playlist_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "PlaylistAgent--GetPlaylistId",
        "description": "Returns the playlist id of the playlist. Specify the playlist with its full name.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "playlist_name"
              ],
              "type": "object",
              "properties": {
                "playlist_name": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "SocialAgent--FollowArtist",
        "description": "Follow an arist.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "artist"
              ],
              "type": "object",
              "properties": {
                "artist": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "SocialAgent--UnfollowArtist",
        "description": "Unfollow an arist",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "artist"
              ],
              "type": "object",
              "properties": {
                "artist": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "SocialAgent--LikeTrack",
        "description": "Likes a track.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "track"
              ],
              "type": "object",
              "properties": {
                "track": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "CustomerAgent--MakeOrder",
        "description": "Creates an order for the given amount of the specified item. Default amount is 1. Returns the order id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                },
                "amount": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "CustomerAgent--MakeOrders",
        "description": "Creates multiple orders. Takes in a list of items and a list of the same length with their amounts. The order of both input lists has to be the same. The order determines the amount for the item. If no amount list was given, sets the amount for each item to 1. Returns the order ids as a list in the same order as the input lists. If an error occurred, returns -1 for the order with the error.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "items"
              ],
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "amounts": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "CustomerAgent--GetOrder",
        "description": "Gets an existing order by the given order id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "order_id"
              ],
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "CustomerAgent--GetAllOrders",
        "description": "Get all existing orders.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "CustomerAgent--CancelOrder",
        "description": "Cancel an existing order. Returns true if an order was cancelled.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "order_id"
              ],
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "CustomerAgent--AddOrder",
        "description": "Adds an order to the list of orders. This should only be used if you have already have an order id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "order"
              ],
              "type": "object",
              "properties": {
                "order": {
                  "title": "Order",
                  "required": [
                    "id",
                    "item"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique id of the order."
                    },
                    "item": {
                      "type": "string",
                      "description": "The name of the order item."
                    },
                    "amount": {
                      "type": "integer",
                      "description": "The amount of items on this order."
                    }
                  }
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "CustomerAgent--AddOrders",
        "description": "Adds multiple existing orders to the list of orders. This should only be used if you already have an order id.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "orders"
              ],
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "items": {
                    "title": "Order",
                    "required": [
                      "id",
                      "item"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique id of the order."
                      },
                      "item": {
                        "type": "string",
                        "description": "The name of the order item."
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The amount of items on this order."
                      }
                    }
                  }
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "WarehouseAgent--GetItemLocation",
        "description": "Gets the location of a given item in the warehouse. Returns an empty string if the item was not found.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "WarehouseAgent--GetInventory",
        "description": "Gets the inventory of the given zone from the warehouse.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "zone"
              ],
              "type": "object",
              "properties": {
                "zone": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "WarehouseAgent--GetZones",
        "description": "Returns the list of available zones in the warehouse.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "WarehouseAgent--AddItemToZone",
        "description": "Adds a single item to the given zone to the warehouse.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item",
                "zone"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                },
                "zone": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "WarehouseAgent--RemoveItemFromZone",
        "description": "Removes a single item from the given zone of the warehouse.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item",
                "zone"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                },
                "zone": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "ManagerAgent--GetWarehouseName",
        "description": "Get the name of the warehouse.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "ManagerAgent--GetWarehouseAddress",
        "description": "Get the address of the warehouse.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "ManagerAgent--GetWarehouseOwner",
        "description": "Get the name of the owner of the warehouse.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "ManagerAgent--GetWarehouseEmail",
        "description": "Get the contact email address of the warehouse.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "ManagerAgent--GetWarehouseAreaSize",
        "description": "Get the total area size of the warehouse in square meters.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "ManagerAgent--GetWarehouseZoneSizes",
        "description": "Get the area sizes of each zone within the warehouse in square meters.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "ManagerAgent--GetWarehouseZoneSize",
        "description": "Get the area size for the given zone within the warehouse in square meters. If the given zone is not found within the warehouse, a -1 is returned.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "zone"
              ],
              "type": "object",
              "properties": {
                "zone": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot1--GetZone",
        "description": "Gets the current zone of the warehouse robot.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot1--MoveToLocation",
        "description": "Moves the warehouse robot to the given zone.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "zone"
              ],
              "type": "object",
              "properties": {
                "zone": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot1--GetInventory",
        "description": "Get the inventory of the warehouse robot.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot1--PickupItem",
        "description": "Picks up an item from the zone the warehouse robot is currently in.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot1--DropItem",
        "description": "Drops an item into the zone the warehouse robot is currently in.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot2--GetZone",
        "description": "Gets the current zone of the warehouse robot.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot2--MoveToLocation",
        "description": "Moves the warehouse robot to the given zone.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "zone"
              ],
              "type": "object",
              "properties": {
                "zone": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot2--GetInventory",
        "description": "Get the inventory of the warehouse robot.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot2--PickupItem",
        "description": "Picks up an item from the zone the warehouse robot is currently in.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot2--DropItem",
        "description": "Drops an item into the zone the warehouse robot is currently in.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot3--GetZone",
        "description": "Gets the current zone of the warehouse robot.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot3--MoveToLocation",
        "description": "Moves the warehouse robot to the given zone.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "zone"
              ],
              "type": "object",
              "properties": {
                "zone": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot3--GetInventory",
        "description": "Get the inventory of the warehouse robot.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "type": "object"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot3--PickupItem",
        "description": "Picks up an item from the zone the warehouse robot is currently in.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "LogisticsRobot3--DropItem",
        "description": "Drops an item into the zone the warehouse robot is currently in.",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "item"
              ],
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Add",
        "description": "Adds number a and b",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a",
                "b"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                },
                "b": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Subtract",
        "description": "Subtracts number a and b",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a",
                "b"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                },
                "b": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Multiply",
        "description": "Multiplies number a and b",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a",
                "b"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                },
                "b": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Divide",
        "description": "Divides number a by b",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a",
                "b"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                },
                "b": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Modulus",
        "description": "Modulus of number a by b",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a",
                "b"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                },
                "b": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Power",
        "description": "Power of base to exponent",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "base",
                "exp"
              ],
              "type": "object",
              "properties": {
                "base": {
                  "type": "number"
                },
                "exp": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--SquareRoot",
        "description": "Square root of number a",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--LogN",
        "description": "Natural logarithm of number a",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Exp",
        "description": "Exponent of number a to the base of e",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Sin",
        "description": "Sine of number a",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Cos",
        "description": "Cosine of number a",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Tan",
        "description": "Tan of number a",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Asin",
        "description": "Arc sine of number a",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Acos",
        "description": "Arc cosine of number a",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "calculator_agent--Atan",
        "description": "Arc tangent of number a",
        "parameters": {
          "type": "object",
          "properties": {
            "requestBody": {
              "required": [
                "a"
              ],
              "type": "object",
              "properties": {
                "a": {
                  "type": "number"
                }
              }
            },
            "parameters": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "integer",
                  "format": "int32"
                },
                "containerId": {
                  "type": "string"
                },
                "forward": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  ]
}